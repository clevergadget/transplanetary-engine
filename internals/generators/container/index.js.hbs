/*
 *
 * {{properCase name }}
 *
 * usage: import {{properCase name }} from 'containers/{{properCase name }}'
 *
 */

import React, { PropTypes } from 'react'
import { connect } from 'react-redux'
{{#if wantHeaders}}
import Helmet from 'react-helmet'
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl'
{{/if}}
{{#if wantActionsAndReducer}}
import { createStructuredSelector } from 'reselect'
// import { selectors } from './selectors'
{{/if}}
{{#if wantMessages}}
import messages from './messages'
{{/if}}

class {{ properCase name }} extends React.{{{ component }}} { // eslint-disable-line react/prefer-stateless-function
  render() {
    return (
      <div>
      {{#if wantHeaders}}
        <Helmet
          title="{{properCase name}}"
          meta={{curly true}}[
            {{curly true}} name: 'description', content: 'Description of {{properCase name}}' {{curly}},
          ]{{curly}}
        />
      {{/if}}
      {{#if wantMessages}}
        <FormattedMessage {...messages.header} />
      {{/if}}
      </div>
    )
  }
}

{{ properCase name }}.propTypes = {
  // specify proptypes here
}

{{#if wantActionsAndReducer}}
const mapStateToProps = createStructuredSelector({
  // add selectors here
})
{{/if}}

function mapDispatchToProps(dispatch) {
  return {
    // nameOfFunctionToCall: inputName => dispatch(nameOfAction()),
  }
}

{{#if wantActionsAndReducer}}
export default connect(mapStateToProps, mapDispatchToProps)({{ properCase name }})
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase name }})
{{/if}}
